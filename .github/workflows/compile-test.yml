name: Compile test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  setup_test:
    strategy:
      matrix:
        target: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.target }}
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: setup node
        uses: actions/setup-node@v4
        with:
            node-version: '20'
      - name: Download solc binary for the platform
        run: |
          if [ "${{ runner.os }}" == "Linux" ]; then
            echo "Downloading solc for Ubuntu..."
            wget https://github.com/ethereum/solidity/releases/download/v0.8.18/solc-static-linux -O solc
            chmod +x solc
          elif [ "${{ runner.os }}" == "Darwin" ]; then
            echo "Downloading solc for macOS..."
            wget https://github.com/ethereum/solidity/releases/download/v0.8.18/solc-macos -O solc
            chmod +x solc
          elif [ "${{ runner.os }}" == "Windows" ]; then
            echo "Downloading solc for Windows..."
            Invoke-WebRequest https://github.com/ethereum/solidity/releases/download/v0.8.18/solc-windows.exe -OutFile solc.exe
          fi
      - name: Clone repo for resolc binary build
        run: |
          git clone https://github.com/paritytech/revive.git
          cd revive
          make install-llvm
          export LLVM_SYS_181_PREFIX=${PWD}/target-llvm/gnu/target-final
          make install-bin
      - run: npm install
        working-directory: "./compile-tests"
      - name: run-setup
        run: npm run setup
        working-directory: "./compile-tests"

      # Upload artifacts
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-compile-artifacts-${{ github.sha }}
          path: |
            compile-tests/*JsonCompilationArtifacts.json
            compile-tests/*BinCompilationArtifacts.json
  
  comparison_test:
    needs: setup_test
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - run: npm install
        working-directory: "./compile-tests"
      - name: run-test
        run: npm run test
        working-directory: "./compile-tests"
